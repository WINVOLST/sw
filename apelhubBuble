local farm = workspace.Farm
local targetFruitName = "Bone Blossom"
local checkInterval = 0.1
local webhookUrl = "https://discord.com/api/webhooks/1403842281940713622/flk8bbIlBakwHq7TkEKm7pAoG9_Zac795EAC5E_ZZPCjy9IR1O8UoK5Fo_20986IHTKJ"
local heavyFruitThreshold = 1000

local processedFruits = {}

local function sendToWebhook(fruitName, weight, variant, isHeavy)
    local httpService = game:GetService("HttpService")
    
    local content = isHeavy and "@everyone 1k + kg !" or "new fruit info"
    
    local payload = {
        content = content,
        embeds = {{
            title = "Info",
            fields = {
                {name = "Name", value = fruitName, inline = true},
                {name = "Weight", value = tostring(weight).." kg", inline = true},
                {name = "Type", value = tostring(variant), inline = true}
            },
            color = isHeavy and 16711680 or 65280
        }}
    }
    
    local success, jsonPayload = pcall(function()
        return httpService:JSONEncode(payload)
    end)
    
    if not success then
        warn("JSON encode failed: "..tostring(jsonPayload))
        return
    end

    local success, response = pcall(function()
        return httpService:RequestAsync({
            Url = webhookUrl,
            Method = "POST",
            Headers = {
                ["Content-Type"] = "application/json"
            },
            Body = jsonPayload
        })
    end)
    
    if not success then
        warn("Webhook request failed: "..tostring(response))
    end
end

local function checkForNewFruits()
    local plantsPhysical = workspace.Farm.Farm.Important.Plants_Physical
    local targetPlant = plantsPhysical:FindFirstChild(targetFruitName)
    
    if not targetPlant then
        warn("Plant not found: "..targetFruitName)
        return false
    end
    
    local fruitsFolder = targetPlant.Fruits
    if not fruitsFolder then
        warn("Fruits folder missing in "..targetFruitName)
        return false
    end
    
    local foundNew = false
    for _, fruit in ipairs(fruitsFolder:GetChildren()) do
        if not processedFruits[fruit] then
            local weight = fruit:FindFirstChild("Weight")
            local variant = fruit:FindFirstChild("Variant")
            
            if weight and variant then
                local isHeavy = weight.Value > heavyFruitThreshold
                sendToWebhook(fruit.Name, weight.Value, variant.Value, isHeavy)
                processedFruits[fruit] = true
                print("Logged: "..fruit.Name.." ("..weight.Value.."kg)")
                foundNew = true
            end
        end
    end
    
    return foundNew
end

local function main()
    while true do
        local success, err = pcall(checkForNewFruits)
        if not success then
            warn("Check failed: "..tostring(err))
        end
        wait(checkInterval)
    end
end

local success, err = pcall(main)
if not success then
    warn("Critical error: "..tostring(err))
end

print("System running")
